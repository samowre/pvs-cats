(categories
 (category_TCC1 0
  (category_TCC1-1 nil 3578685680 ("" (subtype-tcc) nil nil)
   ((Ar formal-type-decl nil categories nil)) nil))
 (category_TCC2 0
  (category_TCC2-1 nil 3578685680 ("" (subtype-tcc) nil nil)
   ((Ar formal-type-decl nil categories nil)) nil))
 (category_TCC3 0
  (category_TCC3-1 nil 3578685680 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (Ob formal-type-decl nil categories nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (Ar formal-type-decl nil categories nil))
   nil))
 (category_TCC4 0
  (category_TCC4-1 nil 3578685680 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (Ob formal-type-decl nil categories nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (Ar formal-type-decl nil categories nil))
   nil)))
(preorderAsCat
 (theCat_TCC1 0
  (theCat_TCC1-1 nil 3578685680
   ("" (grind) (("" (typepred "p") (("" (grind) nil nil)) nil)) nil)
   ((p formal-const-decl "(preorder?[T])" preorderAsCat nil)
    (preorder? const-decl "bool" orders nil)
    (pred type-eq-decl nil defined_types nil)
    (T formal-type-decl nil preorderAsCat nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (transitive? const-decl "bool" relations nil)
    (reflexive? const-decl "bool" relations nil))
   nil))
 (theCat_TCC2 0
  (theCat_TCC2-1 nil 3578685680
   ("" (assert)
    (("" (skeep) (("" (typepred "p") (("" (grind) nil nil)) nil)) nil))
    nil)
   ((reflexive? const-decl "bool" relations nil)
    (transitive? const-decl "bool" relations nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (T formal-type-decl nil preorderAsCat nil)
    (pred type-eq-decl nil defined_types nil)
    (preorder? const-decl "bool" orders nil)
    (p formal-const-decl "(preorder?[T])" preorderAsCat nil))
   nil))
 (theCat_TCC3 0
  (theCat_TCC3-1 nil 3578685680
   ("" (skeep)
    (("" (typepred "p")
      (("" (typepred "f")
        (("" (typepred "g")
          (("" (grind :if-match nil)
            (("" (inst -5 "f`1" "f`2" "g`2")
              (("" (assert)
                (("" (prop)
                  (("1" (assert)
                    (("1" (case "f = (f`1, f`2)")
                      (("1" (assert)
                        (("1" (replace -1) (("1" (assert) nil nil))
                          nil))
                        nil)
                       ("2" (assert) nil nil))
                      nil))
                    nil)
                   ("2" (replace -2)
                    (("2" (assert)
                      (("2" (case-replace "g = (g`1, g`2)")
                        (("1" (assert) nil nil) ("2" (assert) nil nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((p formal-const-decl "(preorder?[T])" preorderAsCat nil)
    (preorder? const-decl "bool" orders nil)
    (pred type-eq-decl nil defined_types nil)
    (T formal-type-decl nil preorderAsCat nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (reflexive? const-decl "bool" relations nil)
    (transitive? const-decl "bool" relations nil)
    (Ar type-eq-decl nil preorderAsCat nil))
   nil))
 (theCat_TCC4 0
  (theCat_TCC4-1 nil 3578685680 ("" (subtype-tcc) nil nil) nil nil))
 (theCat_TCC5 0
  (theCat_TCC5-1 nil 3578685680 ("" (subtype-tcc) nil nil) nil nil)))
(functors
 (functor?_TCC1 0
  (functor?_TCC1-1 nil 3578685689 ("" (subtype-tcc) nil nil) nil nil)))
(natTrans)
(adjunction)

